name: 🛰️Terraform
on:
  #push:
   # branches:
  #    - main
  workflow_dispatch:
  
jobs:
  apply:
    runs-on: ubuntu-latest
    steps:
      # - name: Install 1Password CLI
      #   uses: 1password/install-cli-action@v1
      - name: Checkout
        uses: actions/checkout@v3
      - name: Load credentials
        id: op-load-secrets
        uses: 1password/load-secrets-action@v1
        with:
          export-env: false
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          OCID: "op://git/ORACLE/OCID"
          OCI_REGION: "op://git/ORACLE/OCI_REGION"
          OCI_CONFIG: "op://git/ORACLE/OCI_CONFIG"
          OCI_KEY_FILE: "op://git/ORACLE/OCI_KEY_FILE"
          SSH_PRIVATE_KEY_FILE: "op://git/ORACLE/SSH_PRIVATE_KEY_FILE"
          SSH_PUBLIC_KEY_FILE:  "op://git/ORACLE/SSH_PUBLIC_KEY_FILE"

      - name: "Write OCI Config & Key Files"
        run: |
          mkdir ~/.oci
          echo "${{ steps.op-load-secrets.outputs.OCI_CONFIG }}" > ~/.oci/config
          echo "${{ steps.op-load-secrets.outputs.OCI_KEY_FILE }}" >> ~/.oci/key.pem
          # echo "[DEFAULT]" >> ~/.oci/config
          # echo "user=${{inputs.user}}" >> ~/.oci/config
          # echo "fingerprint=${{inputs.fingerprint}}" >> ~/.oci/config
          # echo "pass_phrase=${{inputs.pass_phrase}}" >> ~/.oci/config
          # echo "region=${{inputs.region}}" >> ~/.oci/config
          # echo "tenancy=${{inputs.tenancy}}" >> ~/.oci/config
          # echo "key_file=~/.oci/key.pem" >> ~/.oci/config
        shell: bash

      - name: "Fix OCI Config File Permissions"
        run: |
          oci setup repair-file-permissions --file /home/runner/.oci/config
          oci setup repair-file-permissions --file /home/runner/.oci/key.pem
        shell: bash

      - name: "Install OCI CLI"
        run: |
          curl -L -O https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh
          chmod +x install.sh
          ./install.sh --accept-all-defaults
          echo "/home/runner/bin" >> $GITHUB_PATH
          exec -l $SHELL
          
      - name: "Install terraform"
        run: |
          sudo apt-get update && sudo apt-get install -y gnupg software-properties-common
          wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
          gpg --no-default-keyring --keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg --fingerprint
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt-get update
          sudo apt-get install terraform
          
      - name: "Terraform init"
        run: |
          terraform -chdir=iac/oracle init
          
      - name: "Terraform apply"
        run: |
          terraform -chdir=iac/oracle apply 



      # - name: 'Prepare SSH key and config'
      #   run: |
      #     mkdir -p ~/.ssh
      #     echo "${{ env.SSH_PRIVATE_KEY_FILE }}" > ~/.ssh/id_rsa
      #     echo "${{ env.SSH_PUBLIC_KEY_FILE }}" > ~/.ssh/id_rsa.pub
      #     chmod 600 ~/.ssh/id_rsa
